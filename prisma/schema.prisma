
// learn more about it in the docs: https

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  password      String   
  name          String   
  birthDate     DateTime?
  profession    String?  
  gender        String    @default("outros")
  createdAt     DateTime  @default(now()) 
  updatedAt     DateTime  @updatedAt 


  revenues         Revenue[]        
  fixedExpenses    FixedExpense[]   
  variableExpenses VariableExpense[] 
  creditCardBills  CreditCardBill[]
}

model Revenue {
  id         Int       @id @default(autoincrement())
  user       User      @relation(fields: [userId], references: [id])
  userId     Int      
  source     String   
  amount     Float    
  startDate  DateTime  @default(now())
  endDate    DateTime?
  frequency  String    @default("mensal")
  isPaid     Boolean   @default(false)
  createdAt  DateTime  @default(now())
}


model FixedExpense {
  id          Int       @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int      
  description String   
  amount      Float    
  dueDate     DateTime  @default(now())
  isPaid      Boolean   @default(false)
  category    String    @default("outros")
  month       Int      
  year        Int      
  createdAt   DateTime  @default(now()) 
}

model VariableExpense {
  id                Int       @id @default(autoincrement())
  user              User      @relation(fields: [userId], references: [id])
  userId            Int      
  description       String   
  amount            Float    
  paymentMethod     String?  
  dueDate           DateTime  @default(now())
  isPaid            Boolean   @default(false)
  category    String    @default("outros")
  numInstallments   Int?     
  currentInstallment Int?     @default(1)
  month             Int      
  year              Int      
  createdAt         DateTime  @default(now()) 
}

model CreditCardBill {
  id          Int       @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int      
  totalAmount Float    
  dueDate     DateTime
  cardProvider String   @default("nubank")
  isPaid      Boolean   @default(false)
  createdAt   DateTime  @default(now()) 
}
